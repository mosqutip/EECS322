((let ((f 1))
   (let ((f (new-tuple 0)))
     (begin
       (aset f 0 (make-closure :g11 (new-tuple f)))
       (print ((closure-proc (aref f 0)) (closure-vars (aref f 0)) 10)))))
 (:g11
  (vars x)
  (let ((f (aref vars 0)))
    (if (< x 2)
      1
      (+
       ((closure-proc (aref f 0)) (closure-vars (aref f 0)) (- x 1))
       ((closure-proc (aref f 0)) (closure-vars (aref f 0)) (- x 2)))))))
