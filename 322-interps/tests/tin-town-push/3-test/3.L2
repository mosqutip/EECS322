(((call :main))
 (:main
  (eax <- (allocate 11 1))
  (array <- eax)
  (eax += 4)
  ((mem eax 0) <- 7)
  (eax += 4)
  ((mem eax 0) <- 9)
  (eax += 4)
  ((mem eax 0) <- 11)
  (eax += 4)
  ((mem eax 0) <- 13)
  (eax += 4)
  ((mem eax 0) <- 15)
  (increase <- 7)
  (eax <- array)
  (edx <- increase)
  (call :bump_array)
  (new_array <- eax)
  (eax <- new_array)
  (tail-call :print_array))
 (:bump_array
  (array <- eax)
  (increase <- edx)
  (size <- (mem array 0))
  (size <<= 1)
  (size += 1)
  (eax <- (allocate 5 1))
  (size_offset <- eax)
  (eax += 4)
  ((mem eax 0) <- size)
  (eax += 4)
  ((mem eax 0) <- 1)
  (eax <- array)
  (edx <- increase)
  (ecx <- size_offset)
  (tail-call :bump_helper))
 (:bump_helper
  (array <- eax)
  (increase <- edx)
  (size_offset <- ecx)
  (size <- 1)
  (size >>= 1)
  (tmp1 <- (mem size_offset 0))
  (cjump size < tmp1 :good1 :bad1)
  :bad1
  (size <<= 1)
  (eax <- (array-error size_offset size))
  :good1
  (size <<= 2)
  (size += size_offset)
  (size <- (mem size 4))
  (offset <- 3)
  (offset >>= 1)
  (tmp2 <- (mem size_offset 0))
  (cjump offset < tmp2 :good2 :bad2)
  :bad2
  (offset <<= 1)
  (eax <- (array-error size_offset offset))
  :good2
  (offset <<= 2)
  (offset += size_offset)
  (offset <- (mem offset 4))
  (unequal <- size)
  (unequal -= offset)
  (unequal += 1)
  (cjump unequal = 1 :false2 :true1)
  :true1
  (old_val <- offset)
  (old_val >>= 1)
  (tmp3 <- (mem array 0))
  (cjump old_val < tmp3 :good3 :bad3)
  :bad3
  (old_val <<= 1)
  (eax <- (array-error array old_val))
  :good3
  (old_val <<= 2)
  (old_val += array)
  (old_val <- (mem old_val 4))
  (new_val <- old_val)
  (new_val += increase)
  (new_val -= 1)
  (dont_care <- offset)
  (dont_care >>= 1)
  (tmp4 <- (mem array 0))
  (cjump dont_care < tmp4 :good4 :bad4)
  :bad4
  (dont_care <<= 1)
  (eax <- (array-error array dont_care))
  :good4
  (dont_care <<= 2)
  (dont_care += array)
  ((mem dont_care 4) <- new_val)
  (dont_care <- 1)
  (next_offset <- offset)
  (next_offset += 3)
  (next_offset -= 1)
  (eax <- (allocate 5 1))
  (new_s_o <- eax)
  (eax += 4)
  ((mem eax 0) <- size)
  (eax += 4)
  ((mem eax 0) <- next_offset)
  (eax <- array)
  (edx <- increase)
  (ecx <- new_s_o)
  (tail-call :bump_helper)
  :false2
  (eax <- array)
  (return))
 (:print_array
  (array <- eax)
  (size <- (mem array 0))
  (size <<= 1)
  (size += 1)
  (eax <- array)
  (edx <- size)
  (ecx <- 1)
  (tail-call :print_helper))
 (:print_helper
  (array <- eax)
  (size <- edx)
  (offset <- ecx)
  (unequal <- size)
  (unequal -= offset)
  (unequal += 1)
  (cjump unequal = 1 :false3 :true3)
  :true3
  (elmt <- offset)
  (elmt >>= 1)
  (tmp5 <- (mem array 0))
  (cjump elmt < tmp5 :good5 :bad5)
  :bad5
  (elmt <<= 1)
  (eax <- (array-error array elmt))
  :good5
  (elmt <<= 2)
  (elmt += array)
  (elmt <- (mem elmt 4))
  (eax <- (print elmt))
  (dont_care <- 1)
  (next_offset <- offset)
  (next_offset += 3)
  (next_offset -= 1)
  (eax <- array)
  (edx <- size)
  (ecx <- next_offset)
  (tail-call :print_helper)
  :false3
  (eax <- array)
  (return)))
