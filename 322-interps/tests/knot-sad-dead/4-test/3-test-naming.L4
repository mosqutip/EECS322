((let ((mem 0))
   (let ((goto 1))
     (let ((cjump 2))
       (let ((call 3))
         (let ((tail-call 4))
           (let ((return 5))
             (let ((allocate 6))
               (let ((array-error 7))
                 (let ((arr (new-tuple mem goto cjump call tail-call return allocate array-error)))
                   (let ((trash (print arr)))
                     (:main)))))))))))
 (:main ()
        (let ((tmp 3))
          (let ((temp 4))
            (let ((var 5))
              (let ((v 6))
                (let ((t 7))
                  (let ((x (* temp var)))
                    (let ((x (new-array 10 0)))
                      (let ((z (aref x v)))
                        (let ((z (aset x v t)))
                          (let ((arr (new-tuple tmp temp var v t)))
                            (print arr)))))))))))))
