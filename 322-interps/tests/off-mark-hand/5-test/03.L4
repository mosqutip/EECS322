((let ([x 10])
      (let ([y 20])
      	   (let ([w 30])
	   	(let ([mult (make-closure :func_0 (new-tuple x y w))])
		(print ((closure-proc mult) (closure-vars mult) (new-tuple 1 1 -1)))))))

(:func_0 (vars real_vars)
       (let ([var_0 (aref vars 0)])
       	    (let ([var_1 (aref vars 1)])
	    	 (let ([var_2 (aref vars 2)])
		      (let ([real_var_0 (aref real_vars 0)])
		      	   (let ([real_var_1 (aref real_vars 1)])
			   	(let ([real_var_2 (aref real_vars 2)])
				(* var_0 (* var_1 (* var_2 (+ real_var_0 (+ real_var_1 real_var_2)))))))))))))