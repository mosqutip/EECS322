((let ((__x0 (+ 5 5))) (let ((__x1 (:f __x0))) (let ((__x2 (+ 5 5))) (let ((__x3 (:f __x2))) (let ((__x4 (+ __x1 __x3))) (:test __x4 80))))))
(:f (__x5) (let ((__x6 (+ __x5 __x5))) (let ((__x7 (+ __x5 __x5))) (+ __x6 __x7))))
(:tolist (__x8) (:tolisthelper __x8 0))
(:tolisthelper (__x9 __x10) (let ((__x11 (alen __x9))) (let ((__x12 (<= __x11 __x10))) (if __x12 (:nil) (let ((__x13 (aref __x9 __x10))) (let ((__x14 (+ 1 __x10))) (let ((__x15 (:tolisthelper __x9 __x14))) (:cons __x13 __x15))))))))
(:foreach (__x16 __x17) (let ((__x18 (:empty __x16))) (if __x18 1 (let ((__x20 (:head __x16))) (let ((__x19 (__x17 __x20))) (let ((__x21 (:tail __x16))) (:foreach __x21 __x17)))))))
(:map (__x22 __x23) (let ((__x24 (:empty __x22))) (if __x24 (:nil) (let ((__x25 (:head __x22))) (let ((__x26 (__x23 __x25))) (let ((__x27 (:tail __x22))) (let ((__x28 (:map __x27 __x23))) (:cons __x26 __x28))))))))
(:filter (__x29 __x30) (let ((__x31 (:empty __x29))) (if __x31 (new-tuple ) (let ((__x32 (:head __x29))) (let ((__x33 (__x30 __x32))) (if __x33 (let ((__x34 (:head __x29))) (let ((__x35 (:tail __x29))) (let ((__x36 (:filter __x35 __x30))) (:cons __x34 __x36)))) (let ((__x37 (:tail __x29))) (:filter __x37 __x30))))))))
(:foldl (__x38 __x39 __x40) (let ((__x41 (:empty __x40))) (if __x41 __x39 (let ((__x42 (:head __x40))) (let ((__x43 (__x38 __x39 __x42))) (let ((__x44 (:tail __x40))) (:foldl __x38 __x43 __x44)))))))
(:zip (__x45 __x46) (let ((__x47 (:empty __x45))) (if __x47 (:nil) (let ((__x48 (:empty __x46))) (if __x48 (:nil) (let ((__x49 (:head __x45))) (let ((__x50 (:head __x46))) (let ((__x51 (:nil))) (let ((__x52 (:cons __x50 __x51))) (let ((__x53 (:cons __x49 __x52))) (let ((__x54 (:tail __x45))) (let ((__x55 (:tail __x46))) (let ((__x56 (:zip __x54 __x55))) (:cons __x53 __x56))))))))))))))
(:find (__x57 __x58) (let ((__x59 (:empty __x57))) (if __x59 (:none) (let ((__x60 (:head __x57))) (let ((__x61 (__x58 __x60))) (if __x61 (let ((__x62 (:head __x57))) (:some __x62)) (let ((__x63 (:tail __x57))) (:find __x63 __x58))))))))
(:sq (__x64) (* __x64 __x64))
(:double (__x65) (+ __x65 __x65))
(:sqdouble (__x66) (let ((__x67 (:double __x66))) (let ((__x68 (:double __x66))) (* __x67 __x68))))
(:greaterthan3 (__x69) (< 3 __x69))
(:add (__x70 __x71) (+ __x70 __x71))
(:mult (__x72 __x73) (* __x72 __x73))
(:some (__x74) (let ((__x75 (new-tuple __x74))) (:tolist __x75)))
(:none () (new-tuple ))
(:option_get (__x76) (aref __x76 0))
(:nil () (new-tuple ))
(:cons (__x77 __x78) (new-tuple __x77 __x78))
(:head (__x79) (aref __x79 0))
(:tail (__x80) (aref __x80 1))
(:empty (__x81) (let ((__x82 (alen __x81))) (= 0 __x82)))
(:size (__x83) (let ((__x84 (:empty __x83))) (if __x84 0 (let ((__x85 (:tail __x83))) (let ((__x86 (:size __x85))) (+ 1 __x86))))))
(:contains (__x87 __x88) (let ((__x89 (:empty __x88))) (if __x89 0 (let ((__x90 (:head __x88))) (let ((__x91 (= __x87 __x90))) (if __x91 1 (let ((__x92 (:tail __x88))) (:contains __x87 __x92))))))))
(:not (__x93) (if __x93 0 1))
(:and (__x94 __x95) (if __x94 (if __x95 1 0) 0))
(:or (__x96 __x97) (if __x96 1 (if __x97 1 0)))
(:eq (__x98 __x99) (let ((__x100 (a? __x98))) (let ((__x101 (a? __x99))) (let ((__x102 (:and __x100 __x101))) (if __x102 (:eq_list __x98 __x99) (let ((__x103 (number? __x98))) (let ((__x104 (number? __x99))) (let ((__x105 (:and __x103 __x104))) (if __x105 (= __x98 __x99) 0)))))))))
(:eq_num (__x106 __x107) (= __x106 __x107))
(:eq_list (__x108 __x109) (let ((__x110 (:empty __x108))) (let ((__x111 (:empty __x109))) (let ((__x112 (:and __x110 __x111))) (if __x112 1 (let ((__x113 (:empty __x108))) (let ((__x114 (:empty __x109))) (let ((__x115 (:or __x113 __x114))) (if __x115 0 (let ((__x116 (:head __x108))) (let ((__x117 (:head __x109))) (let ((__x118 (:eq __x116 __x117))) (let ((__x119 (:tail __x108))) (let ((__x120 (:tail __x109))) (let ((__x121 (:eq_list __x119 __x120))) (:and __x118 __x121))))))))))))))))
(:eq_arr (__x122 __x123) (let ((__x124 (alen __x122))) (let ((__x125 (alen __x123))) (let ((__x126 (= __x124 __x125))) (if __x126 (:eq_arr_helper __x122 __x123 0) 0)))))
(:eq_arr_helper (__x127 __x128 __x129) (let ((__x130 (alen __x127))) (let ((__x131 (= __x130 __x129))) (let ((__x132 (alen __x128))) (let ((__x133 (= __x132 __x129))) (let ((__x134 (:and __x131 __x133))) (if __x134 1 (let ((__x135 (aref __x127 __x129))) (let ((__x136 (aref __x128 __x129))) (let ((__x137 (:eq __x135 __x136))) (let ((__x138 (+ 1 __x129))) (let ((__x139 (:eq_arr_helper __x127 __x128 __x138))) (:and __x137 __x139)))))))))))))
(:test (__x140 __x141) (let ((__x142 (:eq __x140 __x141))) (if __x142 (:print 1) (let ((__x143 (:print __x140))) (:print __x141)))))
(:print (__x144) (print __x144))
(:identity (__x145) __x145))