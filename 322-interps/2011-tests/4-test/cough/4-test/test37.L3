((let ((__x0 (new-tuple 1 2 3))) (let ((__x1 (:tolist __x0))) (let ((__x2 (new-tuple 1 2 3))) (let ((__x3 (:tolist __x2))) (let ((__x4 (:zip __x1 __x3))) (let ((__x5 (new-tuple 1 1))) (let ((__x6 (:tolist __x5))) (let ((__x7 (new-tuple 2 2))) (let ((__x8 (:tolist __x7))) (let ((__x9 (new-tuple 3 3))) (let ((__x10 (:tolist __x9))) (let ((__x11 (new-tuple __x6 __x8 __x10))) (let ((__x12 (:tolist __x11))) (:test __x4 __x12))))))))))))))
(:tolist (__x13) (:tolisthelper __x13 0))
(:tolisthelper (__x14 __x15) (let ((__x16 (alen __x14))) (let ((__x17 (<= __x16 __x15))) (if __x17 (:nil) (let ((__x18 (aref __x14 __x15))) (let ((__x19 (+ 1 __x15))) (let ((__x20 (:tolisthelper __x14 __x19))) (:cons __x18 __x20))))))))
(:foreach (__x21 __x22) (let ((__x23 (:empty __x21))) (if __x23 1 (let ((__x25 (:head __x21))) (let ((__x24 (__x22 __x25))) (let ((__x26 (:tail __x21))) (:foreach __x26 __x22)))))))
(:map (__x27 __x28) (let ((__x29 (:empty __x27))) (if __x29 (:nil) (let ((__x30 (:head __x27))) (let ((__x31 (__x28 __x30))) (let ((__x32 (:tail __x27))) (let ((__x33 (:map __x32 __x28))) (:cons __x31 __x33))))))))
(:filter (__x34 __x35) (let ((__x36 (:empty __x34))) (if __x36 (new-tuple ) (let ((__x37 (:head __x34))) (let ((__x38 (__x35 __x37))) (if __x38 (let ((__x39 (:head __x34))) (let ((__x40 (:tail __x34))) (let ((__x41 (:filter __x40 __x35))) (:cons __x39 __x41)))) (let ((__x42 (:tail __x34))) (:filter __x42 __x35))))))))
(:foldl (__x43 __x44 __x45) (let ((__x46 (:empty __x45))) (if __x46 __x44 (let ((__x47 (:head __x45))) (let ((__x48 (__x43 __x44 __x47))) (let ((__x49 (:tail __x45))) (:foldl __x43 __x48 __x49)))))))
(:zip (__x50 __x51) (let ((__x52 (:empty __x50))) (if __x52 (:nil) (let ((__x53 (:empty __x51))) (if __x53 (:nil) (let ((__x54 (:head __x50))) (let ((__x55 (:head __x51))) (let ((__x56 (:nil))) (let ((__x57 (:cons __x55 __x56))) (let ((__x58 (:cons __x54 __x57))) (let ((__x59 (:tail __x50))) (let ((__x60 (:tail __x51))) (let ((__x61 (:zip __x59 __x60))) (:cons __x58 __x61))))))))))))))
(:find (__x62 __x63) (let ((__x64 (:empty __x62))) (if __x64 (:none) (let ((__x65 (:head __x62))) (let ((__x66 (__x63 __x65))) (if __x66 (let ((__x67 (:head __x62))) (:some __x67)) (let ((__x68 (:tail __x62))) (:find __x68 __x63))))))))
(:sq (__x69) (* __x69 __x69))
(:double (__x70) (+ __x70 __x70))
(:sqdouble (__x71) (let ((__x72 (:double __x71))) (let ((__x73 (:double __x71))) (* __x72 __x73))))
(:greaterthan3 (__x74) (< 3 __x74))
(:add (__x75 __x76) (+ __x75 __x76))
(:mult (__x77 __x78) (* __x77 __x78))
(:some (__x79) (let ((__x80 (new-tuple __x79))) (:tolist __x80)))
(:none () (new-tuple ))
(:option_get (__x81) (aref __x81 0))
(:nil () (new-tuple ))
(:cons (__x82 __x83) (new-tuple __x82 __x83))
(:head (__x84) (aref __x84 0))
(:tail (__x85) (aref __x85 1))
(:empty (__x86) (let ((__x87 (alen __x86))) (= 0 __x87)))
(:size (__x88) (let ((__x89 (:empty __x88))) (if __x89 0 (let ((__x90 (:tail __x88))) (let ((__x91 (:size __x90))) (+ 1 __x91))))))
(:contains (__x92 __x93) (let ((__x94 (:empty __x93))) (if __x94 0 (let ((__x95 (:head __x93))) (let ((__x96 (= __x92 __x95))) (if __x96 1 (let ((__x97 (:tail __x93))) (:contains __x92 __x97))))))))
(:not (__x98) (if __x98 0 1))
(:and (__x99 __x100) (if __x99 (if __x100 1 0) 0))
(:or (__x101 __x102) (if __x101 1 (if __x102 1 0)))
(:eq (__x103 __x104) (let ((__x105 (a? __x103))) (let ((__x106 (a? __x104))) (let ((__x107 (:and __x105 __x106))) (if __x107 (:eq_list __x103 __x104) (let ((__x108 (number? __x103))) (let ((__x109 (number? __x104))) (let ((__x110 (:and __x108 __x109))) (if __x110 (= __x103 __x104) 0)))))))))
(:eq_num (__x111 __x112) (= __x111 __x112))
(:eq_list (__x113 __x114) (let ((__x115 (:empty __x113))) (let ((__x116 (:empty __x114))) (let ((__x117 (:and __x115 __x116))) (if __x117 1 (let ((__x118 (:empty __x113))) (let ((__x119 (:empty __x114))) (let ((__x120 (:or __x118 __x119))) (if __x120 0 (let ((__x121 (:head __x113))) (let ((__x122 (:head __x114))) (let ((__x123 (:eq __x121 __x122))) (let ((__x124 (:tail __x113))) (let ((__x125 (:tail __x114))) (let ((__x126 (:eq_list __x124 __x125))) (:and __x123 __x126))))))))))))))))
(:eq_arr (__x127 __x128) (let ((__x129 (alen __x127))) (let ((__x130 (alen __x128))) (let ((__x131 (= __x129 __x130))) (if __x131 (:eq_arr_helper __x127 __x128 0) 0)))))
(:eq_arr_helper (__x132 __x133 __x134) (let ((__x135 (alen __x132))) (let ((__x136 (= __x135 __x134))) (let ((__x137 (alen __x133))) (let ((__x138 (= __x137 __x134))) (let ((__x139 (:and __x136 __x138))) (if __x139 1 (let ((__x140 (aref __x132 __x134))) (let ((__x141 (aref __x133 __x134))) (let ((__x142 (:eq __x140 __x141))) (let ((__x143 (+ 1 __x134))) (let ((__x144 (:eq_arr_helper __x132 __x133 __x143))) (:and __x142 __x144)))))))))))))
(:test (__x145 __x146) (let ((__x147 (:eq __x145 __x146))) (if __x147 (:print 1) (let ((__x148 (:print __x145))) (:print __x146)))))
(:print (__x149) (print __x149))
(:identity (__x150) __x150))