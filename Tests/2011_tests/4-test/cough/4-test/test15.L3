((let ((__x0 (make-closure :sq 7))) (let ((__x1 (make-closure :double 7))) (let ((__x2 (closure-proc __x0))) (let ((__x3 (closure-vars __x0))) (let ((__x4 (__x2 __x3))) (let ((__x5 (closure-proc __x1))) (let ((__x6 (closure-vars __x1))) (let ((__x7 (__x5 __x6))) (let ((__x8 (+ __x4 __x7))) (:test __x8 63))))))))))
(:tolist (__x9) (:tolisthelper __x9 0))
(:tolisthelper (__x10 __x11) (let ((__x12 (alen __x10))) (let ((__x13 (<= __x12 __x11))) (if __x13 (:nil) (let ((__x14 (aref __x10 __x11))) (let ((__x15 (+ 1 __x11))) (let ((__x16 (:tolisthelper __x10 __x15))) (:cons __x14 __x16))))))))
(:foreach (__x17 __x18) (let ((__x19 (:empty __x17))) (if __x19 1 (let ((__x21 (:head __x17))) (let ((__x20 (__x18 __x21))) (let ((__x22 (:tail __x17))) (:foreach __x22 __x18)))))))
(:map (__x23 __x24) (let ((__x25 (:empty __x23))) (if __x25 (:nil) (let ((__x26 (:head __x23))) (let ((__x27 (__x24 __x26))) (let ((__x28 (:tail __x23))) (let ((__x29 (:map __x28 __x24))) (:cons __x27 __x29))))))))
(:filter (__x30 __x31) (let ((__x32 (:empty __x30))) (if __x32 (new-tuple ) (let ((__x33 (:head __x30))) (let ((__x34 (__x31 __x33))) (if __x34 (let ((__x35 (:head __x30))) (let ((__x36 (:tail __x30))) (let ((__x37 (:filter __x36 __x31))) (:cons __x35 __x37)))) (let ((__x38 (:tail __x30))) (:filter __x38 __x31))))))))
(:foldl (__x39 __x40 __x41) (let ((__x42 (:empty __x41))) (if __x42 __x40 (let ((__x43 (:head __x41))) (let ((__x44 (__x39 __x40 __x43))) (let ((__x45 (:tail __x41))) (:foldl __x39 __x44 __x45)))))))
(:zip (__x46 __x47) (let ((__x48 (:empty __x46))) (if __x48 (:nil) (let ((__x49 (:empty __x47))) (if __x49 (:nil) (let ((__x50 (:head __x46))) (let ((__x51 (:head __x47))) (let ((__x52 (:nil))) (let ((__x53 (:cons __x51 __x52))) (let ((__x54 (:cons __x50 __x53))) (let ((__x55 (:tail __x46))) (let ((__x56 (:tail __x47))) (let ((__x57 (:zip __x55 __x56))) (:cons __x54 __x57))))))))))))))
(:find (__x58 __x59) (let ((__x60 (:empty __x58))) (if __x60 (:none) (let ((__x61 (:head __x58))) (let ((__x62 (__x59 __x61))) (if __x62 (let ((__x63 (:head __x58))) (:some __x63)) (let ((__x64 (:tail __x58))) (:find __x64 __x59))))))))
(:sq (__x65) (* __x65 __x65))
(:double (__x66) (+ __x66 __x66))
(:sqdouble (__x67) (let ((__x68 (:double __x67))) (let ((__x69 (:double __x67))) (* __x68 __x69))))
(:greaterthan3 (__x70) (< 3 __x70))
(:add (__x71 __x72) (+ __x71 __x72))
(:mult (__x73 __x74) (* __x73 __x74))
(:some (__x75) (let ((__x76 (new-tuple __x75))) (:tolist __x76)))
(:none () (new-tuple ))
(:option_get (__x77) (aref __x77 0))
(:nil () (new-tuple ))
(:cons (__x78 __x79) (new-tuple __x78 __x79))
(:head (__x80) (aref __x80 0))
(:tail (__x81) (aref __x81 1))
(:empty (__x82) (let ((__x83 (alen __x82))) (= 0 __x83)))
(:size (__x84) (let ((__x85 (:empty __x84))) (if __x85 0 (let ((__x86 (:tail __x84))) (let ((__x87 (:size __x86))) (+ 1 __x87))))))
(:contains (__x88 __x89) (let ((__x90 (:empty __x89))) (if __x90 0 (let ((__x91 (:head __x89))) (let ((__x92 (= __x88 __x91))) (if __x92 1 (let ((__x93 (:tail __x89))) (:contains __x88 __x93))))))))
(:not (__x94) (if __x94 0 1))
(:and (__x95 __x96) (if __x95 (if __x96 1 0) 0))
(:or (__x97 __x98) (if __x97 1 (if __x98 1 0)))
(:eq (__x99 __x100) (let ((__x101 (a? __x99))) (let ((__x102 (a? __x100))) (let ((__x103 (:and __x101 __x102))) (if __x103 (:eq_list __x99 __x100) (let ((__x104 (number? __x99))) (let ((__x105 (number? __x100))) (let ((__x106 (:and __x104 __x105))) (if __x106 (= __x99 __x100) 0)))))))))
(:eq_num (__x107 __x108) (= __x107 __x108))
(:eq_list (__x109 __x110) (let ((__x111 (:empty __x109))) (let ((__x112 (:empty __x110))) (let ((__x113 (:and __x111 __x112))) (if __x113 1 (let ((__x114 (:empty __x109))) (let ((__x115 (:empty __x110))) (let ((__x116 (:or __x114 __x115))) (if __x116 0 (let ((__x117 (:head __x109))) (let ((__x118 (:head __x110))) (let ((__x119 (:eq __x117 __x118))) (let ((__x120 (:tail __x109))) (let ((__x121 (:tail __x110))) (let ((__x122 (:eq_list __x120 __x121))) (:and __x119 __x122))))))))))))))))
(:eq_arr (__x123 __x124) (let ((__x125 (alen __x123))) (let ((__x126 (alen __x124))) (let ((__x127 (= __x125 __x126))) (if __x127 (:eq_arr_helper __x123 __x124 0) 0)))))
(:eq_arr_helper (__x128 __x129 __x130) (let ((__x131 (alen __x128))) (let ((__x132 (= __x131 __x130))) (let ((__x133 (alen __x129))) (let ((__x134 (= __x133 __x130))) (let ((__x135 (:and __x132 __x134))) (if __x135 1 (let ((__x136 (aref __x128 __x130))) (let ((__x137 (aref __x129 __x130))) (let ((__x138 (:eq __x136 __x137))) (let ((__x139 (+ 1 __x130))) (let ((__x140 (:eq_arr_helper __x128 __x129 __x139))) (:and __x138 __x140)))))))))))))
(:test (__x141 __x142) (let ((__x143 (:eq __x141 __x142))) (if __x143 (:print 1) (let ((__x144 (:print __x141))) (:print __x142)))))
(:print (__x145) (print __x145))
(:identity (__x146) __x146))