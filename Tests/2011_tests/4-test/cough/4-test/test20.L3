((let ((__x0 (:nil))) (let ((__x1 (:cons 8 __x0))) (let ((__x2 (:cons 7 __x1))) (let ((__x3 (:cons 6 __x2))) (let ((__x4 (:cons 5 __x3))) (let ((__x5 (:cons 4 __x4))) (let ((__x6 (:cons 3 __x5))) (let ((__x7 (:cons 2 __x6))) (let ((__x8 (:cons 1 __x7))) (let ((__x9 (new-tuple 1 2 3 4 5 6 7 8))) (let ((__x10 (:tolist __x9))) (:test __x8 __x10))))))))))))
(:tolist (__x11) (:tolisthelper __x11 0))
(:tolisthelper (__x12 __x13) (let ((__x14 (alen __x12))) (let ((__x15 (<= __x14 __x13))) (if __x15 (:nil) (let ((__x16 (aref __x12 __x13))) (let ((__x17 (+ 1 __x13))) (let ((__x18 (:tolisthelper __x12 __x17))) (:cons __x16 __x18))))))))
(:foreach (__x19 __x20) (let ((__x21 (:empty __x19))) (if __x21 1 (let ((__x23 (:head __x19))) (let ((__x22 (__x20 __x23))) (let ((__x24 (:tail __x19))) (:foreach __x24 __x20)))))))
(:map (__x25 __x26) (let ((__x27 (:empty __x25))) (if __x27 (:nil) (let ((__x28 (:head __x25))) (let ((__x29 (__x26 __x28))) (let ((__x30 (:tail __x25))) (let ((__x31 (:map __x30 __x26))) (:cons __x29 __x31))))))))
(:filter (__x32 __x33) (let ((__x34 (:empty __x32))) (if __x34 (new-tuple ) (let ((__x35 (:head __x32))) (let ((__x36 (__x33 __x35))) (if __x36 (let ((__x37 (:head __x32))) (let ((__x38 (:tail __x32))) (let ((__x39 (:filter __x38 __x33))) (:cons __x37 __x39)))) (let ((__x40 (:tail __x32))) (:filter __x40 __x33))))))))
(:foldl (__x41 __x42 __x43) (let ((__x44 (:empty __x43))) (if __x44 __x42 (let ((__x45 (:head __x43))) (let ((__x46 (__x41 __x42 __x45))) (let ((__x47 (:tail __x43))) (:foldl __x41 __x46 __x47)))))))
(:zip (__x48 __x49) (let ((__x50 (:empty __x48))) (if __x50 (:nil) (let ((__x51 (:empty __x49))) (if __x51 (:nil) (let ((__x52 (:head __x48))) (let ((__x53 (:head __x49))) (let ((__x54 (:nil))) (let ((__x55 (:cons __x53 __x54))) (let ((__x56 (:cons __x52 __x55))) (let ((__x57 (:tail __x48))) (let ((__x58 (:tail __x49))) (let ((__x59 (:zip __x57 __x58))) (:cons __x56 __x59))))))))))))))
(:find (__x60 __x61) (let ((__x62 (:empty __x60))) (if __x62 (:none) (let ((__x63 (:head __x60))) (let ((__x64 (__x61 __x63))) (if __x64 (let ((__x65 (:head __x60))) (:some __x65)) (let ((__x66 (:tail __x60))) (:find __x66 __x61))))))))
(:sq (__x67) (* __x67 __x67))
(:double (__x68) (+ __x68 __x68))
(:sqdouble (__x69) (let ((__x70 (:double __x69))) (let ((__x71 (:double __x69))) (* __x70 __x71))))
(:greaterthan3 (__x72) (< 3 __x72))
(:add (__x73 __x74) (+ __x73 __x74))
(:mult (__x75 __x76) (* __x75 __x76))
(:some (__x77) (let ((__x78 (new-tuple __x77))) (:tolist __x78)))
(:none () (new-tuple ))
(:option_get (__x79) (aref __x79 0))
(:nil () (new-tuple ))
(:cons (__x80 __x81) (new-tuple __x80 __x81))
(:head (__x82) (aref __x82 0))
(:tail (__x83) (aref __x83 1))
(:empty (__x84) (let ((__x85 (alen __x84))) (= 0 __x85)))
(:size (__x86) (let ((__x87 (:empty __x86))) (if __x87 0 (let ((__x88 (:tail __x86))) (let ((__x89 (:size __x88))) (+ 1 __x89))))))
(:contains (__x90 __x91) (let ((__x92 (:empty __x91))) (if __x92 0 (let ((__x93 (:head __x91))) (let ((__x94 (= __x90 __x93))) (if __x94 1 (let ((__x95 (:tail __x91))) (:contains __x90 __x95))))))))
(:not (__x96) (if __x96 0 1))
(:and (__x97 __x98) (if __x97 (if __x98 1 0) 0))
(:or (__x99 __x100) (if __x99 1 (if __x100 1 0)))
(:eq (__x101 __x102) (let ((__x103 (a? __x101))) (let ((__x104 (a? __x102))) (let ((__x105 (:and __x103 __x104))) (if __x105 (:eq_list __x101 __x102) (let ((__x106 (number? __x101))) (let ((__x107 (number? __x102))) (let ((__x108 (:and __x106 __x107))) (if __x108 (= __x101 __x102) 0)))))))))
(:eq_num (__x109 __x110) (= __x109 __x110))
(:eq_list (__x111 __x112) (let ((__x113 (:empty __x111))) (let ((__x114 (:empty __x112))) (let ((__x115 (:and __x113 __x114))) (if __x115 1 (let ((__x116 (:empty __x111))) (let ((__x117 (:empty __x112))) (let ((__x118 (:or __x116 __x117))) (if __x118 0 (let ((__x119 (:head __x111))) (let ((__x120 (:head __x112))) (let ((__x121 (:eq __x119 __x120))) (let ((__x122 (:tail __x111))) (let ((__x123 (:tail __x112))) (let ((__x124 (:eq_list __x122 __x123))) (:and __x121 __x124))))))))))))))))
(:eq_arr (__x125 __x126) (let ((__x127 (alen __x125))) (let ((__x128 (alen __x126))) (let ((__x129 (= __x127 __x128))) (if __x129 (:eq_arr_helper __x125 __x126 0) 0)))))
(:eq_arr_helper (__x130 __x131 __x132) (let ((__x133 (alen __x130))) (let ((__x134 (= __x133 __x132))) (let ((__x135 (alen __x131))) (let ((__x136 (= __x135 __x132))) (let ((__x137 (:and __x134 __x136))) (if __x137 1 (let ((__x138 (aref __x130 __x132))) (let ((__x139 (aref __x131 __x132))) (let ((__x140 (:eq __x138 __x139))) (let ((__x141 (+ 1 __x132))) (let ((__x142 (:eq_arr_helper __x130 __x131 __x141))) (:and __x140 __x142)))))))))))))
(:test (__x143 __x144) (let ((__x145 (:eq __x143 __x144))) (if __x145 (:print 1) (let ((__x146 (:print __x143))) (:print __x144)))))
(:print (__x147) (print __x147))
(:identity (__x148) __x148))